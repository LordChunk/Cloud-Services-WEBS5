services:
  # Target
  target:
    image: cloud-target
    depends_on:
    - mongodb_target
    build: 
      context: .
      dockerfile: ./target/Dockerfile
    expose:
      - 3000
    ports:
      - "8072:3000"
    environment:
      MONGO_URL: "mongodb://mongodb_target:27017/target"
      JWT_SECRET: secret # secret key for jwt
      API_KEY: secret_api_key
  mongodb_target:
    image: mongo
    expose:
      - 27017
    ports:
      - "7072:27017"
    volumes:
      - data_target:/data/db
    environment:
      - MONGO_INITDB_DATABASE=target
  # Authentication
  auth:
    image: cloud-auth
    depends_on:
    - mongodb_auth
    build: 
      context: .
      dockerfile: ./auth/Dockerfile
    expose:
      - 3000
    ports:
      - "8071:3000"
    environment:
      MONGO_URL: "mongodb://mongodb_auth:27017/authentication"
      JWT_SECRET: secret # secret key for jwt
      API_KEY: secret_api_key
  mongodb_auth:
    image: mongo
    expose:
      - 27017
    ports:
      - "7071:27017"
    volumes:
      - data_auth:/data/db
    environment:
      - MONGO_INITDB_DATABASE=authentication
  # Gateway
  gateway:
    image: cloud-gateway
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    ports:
      - "8070:3000" # external port: internal port
    environment:
     - JWT_SECRET=secret # secret key for jwt
     - API_KEY=secret_api_key # API key for backend services
    # List all the services that the gateway should be able to access
     - AUTH_ENDPOINT=http://auth:3000

  # Service bus
  rabbitmq:
    image: rabbitmq:3-management
    expose:
      - 5672
    ports:
      - 5672:5672
    volumes:
      - data_rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  # Logging service
  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports: 
      - 9090:9090
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml
  grafana:
    build: ./grafana
    ports:
      - 3001:3000
volumes:
  data_target:
  data_auth:
  data_rabbitmq:
  prometheus-data:
